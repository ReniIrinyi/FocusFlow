@startuml
skinparam style strictuml
skinparam packageStyle rectangle

package View {
  class MainMenü {
  root:BorderPane
  userService:UserService
  taskService:TaskService
  timeLineSettingsService:TimeLineSettingsService
  helperfunctions:Helperfunctions
  isAdminLoggedIn:Boolean
    +start():void
    + showUserSettings():void
    + setupHeader():void
    + showTimeLineMenu():void
    + showAdminMenu():void
    + authenticateAdmin():Boolean
  }

  class Header{
    +init():void
    +showAboutDialog():void
  }

    MainMenü --> Header


package "timeline"{
class TimeLineManager {
    settingsFile:File
    + createView():VBox
    + loadTimeLineSettings():Pair<Int, List<Int>
  }

  class TimeLine{
      timelineContent:Pane
      scrollPane:ScrollPane
      nowPointer:Polygon
      windowStart:LocalDateTime
      windowEnd:LocalDateTime
      + createView(tasks:List<Task>): Pane
      + initAutoScrollToCurrentTime(): void
      + drawTimeMarkers():void
      + drawTasks(tasks:List<Task>):void
      + initTimeUpdater():void
      + createUserHeader(user:User):Hbox
  }

  class TimeLineHeader{
    + init()
    + startClock()
  }

  TimeLineManager --> TimeLineHeader
  TimeLineManager --> TimeLine
}

  package "admin" {

    class AdminMenu {
      content:StackPane
      + createView(): VBox
      + createAdminSettingsHeader(): HBox
      + refreshView(): void
    }

    MainMenü --> TimeLineManager
    MainMenü --> AdminMenu

    class TaskManager {
      + createView(): VBox
      + addTask()
    }

   class TaskOverview {
     + createView(): VBox
     + addTask()
   }

    class AdminSettings {
      + createView(): VBox
      + showUserUpdateDialog()
      + showUserAddModal()
    }

    class TimelineSettings {
          + createView(): VBox
          + loadTimeLineSettings()
          + saveTimeLineSettings()
    }

    class AdminAuthSettings {
      + createView(): VBox
      + updatePassword()
    }

    AdminSettings --> TimelineSettings
    AdminSettings --> AdminAuthSettings
    TaskManager --> TaskOverview

  }

  AdminMenu --> admin.AdminSettings
  AdminMenu --> admin.TaskManager
}

package Controller {
  class GenericController<T> {
   + createRequest()
  }

  MainMenü --> GenericController

}

package Storage {
  interface StorageInterface<T> {
       + checkIfFilePathExists():void
       + loadEntities(): List<T>
       + saveEntities(List<T>): void
       + addEntity(T): void
       + updateEntity(Int, T): Boolean
       + deleteEntityById(Int): Boolean
     }

     class TaskStorage {
       + checkIfFilePathExists():void
       + loadEntities(): List<Task>
       + saveEntities(List<Task>): void
       + addEntity(Task): void
       + updateEntity(Int, Task): Boolean
       + deleteEntityById(Int): Boolean
       + serializeTask(Task):String
       + parseTask(String):Task
     }

     class UserStorage {
       + checkIfFilePathExists():void
       + initializeCurrentId():void
       + loadEntities(): List<User>
       + saveEntities(List<User>): void
       + addEntity(User): void
       + updateEntity(Int, User): Boolean
       + deleteEntityById(Int): Boolean
     }
     class TimeLineSettingsStorage {
       + checkIfFilePathExists():void
       + loadEntities(): List<User>
       + saveEntities(List<User>): void
       + addEntity(User): void
       + updateEntity(Int, User): Boolean
       + deleteEntityById(Int): Boolean
     }

     GenericController --> StorageInterface
     StorageInterface <|.. TaskStorage
     StorageInterface <|.. UserStorage
     StorageInterface <|.. TimeLineSettingsStorage

}

package Model {
  class Task {
     id: Int
     userId: Int
     title: String
     priority: String
     updatedAt: LocalDateTime
     startTime: LocalDateTime
     endTime: LocalDateTime
     deadLine?:LocalDateTime
     status:String,
     imageBase64:String
  }

  class User {
     id: Int
     name: String
     email: String
     password?: String
     role: String
     profileImage:String
    + generateId()
  }

  class TimeLineSettings{
     timeLineCount:Int
     userId:Int
  }

}
}
@enduml